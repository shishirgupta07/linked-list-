/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
      ListNode ans=head;
        while(left<right)
        {
            ListNode l=getNode(head,left);
            ListNode r=getNode(head,right);
            int val=l.val;
            l.val=r.val;
            r.val=val;
            left++;
            right--;
        }
      return ans;
    }
    public ListNode getNode(ListNode head,int ind)
    {
        for(int i=0;i<ind-1;i++)
        {
           head=head.next;
        }
        return head;
    }
}